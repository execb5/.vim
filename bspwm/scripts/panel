#! /bin/sh

. profile

if [ $(pgrep -cx panel) -gt 1 ] ; then
	pkill -ox -9 panel
	#printf "%s\n" "The panel is already running." >&2
	#exit 1
fi

# Kill any remaining trays / xtitle instances so we don't have multiples.

killall -9 stalonetray
killall -9 xtitle

if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc subscribe report > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &

function clock {
	while true; do
		date +"S%m/%d %H:%M"
		sleep 1
	done
}

clock > "$PANEL_FIFO" &

function bat_percent {
	while true; do
		STATE=`acpi | awk '{print $3;}' | sed s/,//`
		PERCENT=`acpi | awk '{print $4;}' | sed s/,//`
		echo "B$STATE $PERCENT"
		sleep 1
	done
}

bat_percent > "$PANEL_FIFO" &

. panel_colors

panel_bar < "$PANEL_FIFO" | lemonbar -a 32 -n "$PANEL_WM_NAME" -g x$PANEL_HEIGHT -f "$PANEL_FONT" -F "$COLOR_DEFAULT_FG" -B "$COLOR_DEFAULT_BG" | sh &

wid=$(xdo id -a "$PANEL_WM_NAME")
tries_left=20
while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
	sleep 0.05
	wid=$(xdo id -a "$PANEL_WM_NAME")
	tries_left=$((tries_left - 1))
done
[ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait

#! /bin/bash

CUNT=1 #for bat indicator
CZ=1
CA=1
YI=1

#Set monitor
#xrandr --output VGA1 --auto --output LVDS1 --auto --left-of VGA1
#xrandr --output HDMI1 --auto --output LVDS1 --off

#Eye candy effects
xcompmgr -f -l 0.038 -O 0.040 -D 3 -F -C -n &

#Set wallpaper
#feh --bg-scale ~/Data/Wallpapers/wallhaven-104752.png ~/Data/Wallpapers/linuxwall4.png
#feh --bg-scale ~/Data/Wallpapers/linuxwall4.png
#while true; do
        #feh --bg-scale ~/Data/Wallpapers/wallhaven-64346.png
        #sleep 5m
        #feh --bg-scale ~/Data/Wallpapers/1445115.png
        #sleep 5m
#done &

sleep 1
#Start network manager
nm-applet &

CMAS () {
        artest=$( cmus-remote -Q | grep "tag artist" | sed s/"tag artist"/""/g | sed '1s/^.//')
        title=$( cmus-remote -Q | grep "tag title" | sed s/"tag title"/""/g )
        status=$( cmus-remote -Q | grep "status" | sed s/"tag title"/""/g )
        track=$( echo -e "$artest -$title")
        if  [[ "$status" != "status playing" ]]; then
                cm=""
                cmcolor=$(echo -e "\x07$cm\x05")
        else
                trackc=$( echo -e "\x07$track \x05")
                echo "$trackc"
        fi
}

GREET () {
        if [ $( date +%H ) -ge "6"  ] && [ $( date +%H ) -le "12" ] && [ "$CA" = 1 ]; then
                notify-send "Good morning, Lazy~"
                CA=2
        fi
        if [ $( date +%H ) -ge "13"  ] && [ $( date +%H ) -le "18" ] && [ "$CA" = 1 ]; then
                notify-send "Good afternoon, Lazy~"
                CA=2
        fi
        if [ $( date +%H ) -ge "19"  ] && [ "$CA" = 1 ]; then
                notify-send "Good evening, Lazy~"
                CA=2
        fi
}
 
player () {
        np=$(mpc current)
        npcolor=$(echo -e "\x07$np\x05")
        echo "$npcolor"
}

timex () {
        BATT=$( acpi -b | sed 's/.*[charging|unknown], \([0-9]*\)%.*/\1/gi' )
        STATUS=$( acpi -b | sed 's/.*: \([a-zA-Z]*\),.*/\1/gi' )
        if [[ "$BATT" -le "10" ]]; then
                batnot="\x06"
        fi
        if [ $BATT -le "30" ] && [ $BATT -gt 10 ]; then
                batnot="\x08"
        else
                batnot="\x01"
        fi
        if [ $STATUS == "Charging" ]; then
                batnot="\x03"
        fi
        battlev=$( acpi -b | awk '{ print $3$4 }' | tr -d ','| sed s/"Discharging"/"-"/g | sed s/"Charging"/"+"/g | sed s/"Full"/""/g )
        numtasks=$( wc -l TODO | egrep "[0-9]{1,}" -o)
        timef=$( date +"%F %R" )
        timecolor=$(echo -e "\x05 $timef")
        echo "$timecolor"
}

BCHECK () {
        BATT=$( acpi -b | sed 's/.*[charging|unknown], \([0-9]*\)%.*/\1/gi' )
        if [ "$BATT" -lt "100" ] && [ "$CUNT" = "1" ]; then
                STATUS=$( acpi -b | sed 's/.*: \([a-zA-Z]*\),.*/\1/gi' )
                if [ $BATT -le "5" ] && [ $STATUS == 'Discharging' ]; then
                        notify-send "Battery Critical"
                CUNT=2
                fi

        else
                if [[ "$BATT" -ge "11" ]]; then
                        CUNT=1
                fi
        fi
        if [ "$BATT" -le "30" ] && [ "$YI" = "1" ]; then
                notify-send -u critical "Warning: 2/3 Battery Drained"
                if [ "$BATT" -le "30" ]; then
                YI=2
                fi
        fi
}


while true; do
        BCHECK
        GREET
        DATETIME=`date`
        UPTIME=`uptime | sed 's/.*up\s*//' | sed 's/,\s*[0-9]* user.*//' | sed 's/  / /g'`
        BATTERYSTATE=$( acpi -b | awk '{ split($5,a,":"); print substr($3,0,2), $4, "["a[1]":"a[2]"]" }' | tr -d ',' )
	RA=`free | grep Mem | awk '{ printf("%.4f %\n", $3/$2 * 100.0) }'`
        xsetroot -name "`CMAS` $BATTERYSTATE RAM: $RA -- Uptime: $UPTIME -- Date: $DATETIME"
        sleep 1s
done &

dbus-launch &
pulseaudio --start &

#pacmd set-default-sink 0
#pacmd set-default-source 1

ibus-daemon -d
dropbox start &

xautolock -time 10 -locker slock -nowlocker slock -detectsleep -corners 00+0 -cornerdelay 3 &

exec dwm
